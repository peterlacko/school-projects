/*
 * Copyright 2014 Peter Lacko
 * 
 */
package xlacko06.sfc.ga.gui;

import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import xlacko06.sfc.ga.func.GeneticAlgorithm;

/**
 *
 * @author peterson
 */
public class GASimulationUI extends javax.swing.JFrame {

	private GeneticAlgorithm ga;
	private int currentCycle;

	public GASimulationUI() {
		super("Simulation");
		currentCycle = 1;
		initComponents();
	}

	/*
	 Set GA for simulation. One cycle is already performed when this function
	 is called.
	 @param genetic algorithm
	 */
	public void myInit(GeneticAlgorithm g) {
		ga = g;
		switch (ga.simulationData.get(0).pselType) {
			case ROULETTE:
				jPanelPSDynamic.removeAll();
				jPanelPSDynamic.repaint();
				jPanelPSDynamic.revalidate();

				jPanelPSDynamic.add(jPanelPSRoulette);
				jPanelPSDynamic.repaint();
				jPanelPSDynamic.revalidate();
				break;
			case ELITE:
				jPanelPSDynamic.removeAll();
				jPanelPSDynamic.repaint();
				jPanelPSDynamic.revalidate();

				jPanelPSDynamic.add(jPanelPSElite);
				jPanelPSDynamic.repaint();
				jPanelPSDynamic.revalidate();
				break;
			case TOURNAMENT:
				jPanelPSDynamic.removeAll();
				jPanelPSDynamic.repaint();
				jPanelPSDynamic.revalidate();

				jPanelPSDynamic.add(jPanelPSTournament);
				jPanelPSDynamic.repaint();
				jPanelPSDynamic.revalidate();
				break;
			default:
		}
		switch (ga.simulationData.get(0).pselType) {
			case ROULETTE:
				fillInPSRoulette();
				break;
			case ELITE:
				fillInPSElite();
				break;
			case TOURNAMENT:
				fillInPSTournament();
				break;
			default:
		}
	}

	public void nextCycle() {
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		// perform next ga cycle
		if (currentCycle == ga.cyclesPerformed() && !ga.simulationComplete()) {
			ga.performCycle();
		}
		currentCycle++;
		jPanelDynamic.add(jPanelParentSelection);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
	}

	public void prevCycle() {
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		// perform next ga cycle
		currentCycle--;
		jPanelDynamic.add(jPanelParentSelection);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jPanelDynamic = new javax.swing.JPanel();
                jPanelParentSelection = new javax.swing.JPanel();
                jButtonPrev = new javax.swing.JButton();
                jButtonNext = new javax.swing.JButton();
                jButtonNextCycle = new javax.swing.JButton();
                jButtonResults = new javax.swing.JButton();
                jButtonExit = new javax.swing.JButton();
                jLabelCycleNo = new javax.swing.JLabel();
                jPanelPSDynamic = new javax.swing.JPanel();
                jPanelPSRoulette = new javax.swing.JPanel();
                jLabel1 = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                tablePS1 = new javax.swing.JTable();
                jScrollPane2 = new javax.swing.JScrollPane();
                tablePS2 = new javax.swing.JTable();
                jLabel4 = new javax.swing.JLabel();
                jLabel5 = new javax.swing.JLabel();
                jPanelPSElite = new javax.swing.JPanel();
                jLabel2 = new javax.swing.JLabel();
                jScrollPane3 = new javax.swing.JScrollPane();
                tablePS3 = new javax.swing.JTable();
                jLabel6 = new javax.swing.JLabel();
                jScrollPane4 = new javax.swing.JScrollPane();
                tablePS4 = new javax.swing.JTable();
                jLabel7 = new javax.swing.JLabel();
                jPanelPSTournament = new javax.swing.JPanel();
                jLabel3 = new javax.swing.JLabel();
                jScrollPane5 = new javax.swing.JScrollPane();
                tablePS5 = new javax.swing.JTable();
                jScrollPane6 = new javax.swing.JScrollPane();
                tablePS6 = new javax.swing.JTable();
                jLabel8 = new javax.swing.JLabel();
                jLabel9 = new javax.swing.JLabel();
                jScrollPane7 = new javax.swing.JScrollPane();
                tablePS7 = new javax.swing.JTable();
                jLabel10 = new javax.swing.JLabel();
                jButtonPrevCycle = new javax.swing.JButton();
                jPanelRecombination = new javax.swing.JPanel();
                jButtonPrev1 = new javax.swing.JButton();
                jButtonNext1 = new javax.swing.JButton();
                jButtonNextCycle1 = new javax.swing.JButton();
                jButtonResults1 = new javax.swing.JButton();
                jButtonExit1 = new javax.swing.JButton();
                jLabelCycleNo1 = new javax.swing.JLabel();
                jScrollPane8 = new javax.swing.JScrollPane();
                tableREC1 = new javax.swing.JTable();
                jScrollPane9 = new javax.swing.JScrollPane();
                tableREC2 = new javax.swing.JTable();
                jLabel11 = new javax.swing.JLabel();
                jLabel12 = new javax.swing.JLabel();
                jLabel13 = new javax.swing.JLabel();
                jScrollPane10 = new javax.swing.JScrollPane();
                tableREC3 = new javax.swing.JTable();
                jLabel14 = new javax.swing.JLabel();
                jScrollPane11 = new javax.swing.JScrollPane();
                jTextArea1 = new javax.swing.JTextArea();
                jButtonPrevCycle1 = new javax.swing.JButton();
                jPanelMutation = new javax.swing.JPanel();
                jButtonPrev2 = new javax.swing.JButton();
                jButtonNext2 = new javax.swing.JButton();
                jButtonNextCycle2 = new javax.swing.JButton();
                jButtonResults2 = new javax.swing.JButton();
                jButtonExit2 = new javax.swing.JButton();
                jLabelCycleNo2 = new javax.swing.JLabel();
                jScrollPane12 = new javax.swing.JScrollPane();
                tableMUT1 = new javax.swing.JTable();
                jLabel15 = new javax.swing.JLabel();
                jScrollPane13 = new javax.swing.JScrollPane();
                tableMUT2 = new javax.swing.JTable();
                jLabel16 = new javax.swing.JLabel();
                jLabel17 = new javax.swing.JLabel();
                jScrollPane14 = new javax.swing.JScrollPane();
                tableMUT3 = new javax.swing.JTable();
                jLabel18 = new javax.swing.JLabel();
                jButtonPrevCycle2 = new javax.swing.JButton();
                jPanelReinsertion = new javax.swing.JPanel();
                jButtonPrev3 = new javax.swing.JButton();
                jButtonNext3 = new javax.swing.JButton();
                jButtonNextCycle3 = new javax.swing.JButton();
                jButtonResults3 = new javax.swing.JButton();
                jButtonExit3 = new javax.swing.JButton();
                jLabelCycleNo3 = new javax.swing.JLabel();
                jScrollPane15 = new javax.swing.JScrollPane();
                tableREIN1 = new javax.swing.JTable();
                jLabel19 = new javax.swing.JLabel();
                jScrollPane16 = new javax.swing.JScrollPane();
                tableREIN2 = new javax.swing.JTable();
                jLabel20 = new javax.swing.JLabel();
                jLabel21 = new javax.swing.JLabel();
                jButtonPrevCycle3 = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setResizable(false);
                addWindowListener(new java.awt.event.WindowAdapter() {
                        public void windowActivated(java.awt.event.WindowEvent evt) {
                                formWindowActivated(evt);
                        }
                });

                jPanelDynamic.setLayout(new java.awt.CardLayout());

                jPanelParentSelection.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parent Selection", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Serif", 1, 18))); // NOI18N
                jPanelParentSelection.setPreferredSize(new java.awt.Dimension(590, 525));
                jPanelParentSelection.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                jPanelParentSelectionFocusGained(evt);
                        }
                });
                jPanelParentSelection.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                        public void propertyChange(java.beans.PropertyChangeEvent evt) {
                                jPanelParentSelectionPropertyChange(evt);
                        }
                });

                jButtonPrev.setText("< Prev (Reinsertion)");
                jButtonPrev.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrev.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonPrev.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonPrev.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrevActionPerformed(evt);
                        }
                });
                jButtonPrev.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                jButtonPrevFocusGained(evt);
                        }
                });

                jButtonNext.setText("Next (Recombination) >");
                jButtonNext.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNext.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNext.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNext.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNext.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNextActionPerformed(evt);
                        }
                });

                jButtonNextCycle.setText("Next cycle >>");
                jButtonNextCycle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNextCycle.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNextCycleActionPerformed(evt);
                        }
                });
                jButtonNextCycle.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                        public void propertyChange(java.beans.PropertyChangeEvent evt) {
                                jButtonNextCyclePropertyChange(evt);
                        }
                });

                jButtonResults.setText("Skip to results");
                jButtonResults.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonResults.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonResults.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonResults.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonResults.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonResultsActionPerformed(evt);
                        }
                });

                jButtonExit.setText("Exit Simulation");
                jButtonExit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonExit.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonExit.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonExit.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonExit.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonExitActionPerformed(evt);
                        }
                });

                jLabelCycleNo.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
                jLabelCycleNo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jLabelCycleNo.setText("jLabel1");

                jPanelPSDynamic.setLayout(new java.awt.CardLayout());

                jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
                jLabel1.setText("Roulette selection");

                jScrollPane1.setBorder(null);

                tablePS1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tablePS1.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tablePS1.getTableHeader().setReorderingAllowed(false);
                jScrollPane1.setViewportView(tablePS1);

                jScrollPane2.setBorder(null);

                tablePS2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tablePS2.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tablePS2.getTableHeader().setReorderingAllowed(false);
                jScrollPane2.setViewportView(tablePS2);

                jLabel4.setText("Populácia");

                jLabel5.setText("Vybraní rodičia");

                javax.swing.GroupLayout jPanelPSRouletteLayout = new javax.swing.GroupLayout(jPanelPSRoulette);
                jPanelPSRoulette.setLayout(jPanelPSRouletteLayout);
                jPanelPSRouletteLayout.setHorizontalGroup(
                        jPanelPSRouletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelPSRouletteLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelPSRouletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPSRouletteLayout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel1))
                                        .addGroup(jPanelPSRouletteLayout.createSequentialGroup()
                                                .addGroup(jPanelPSRouletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(146, Short.MAX_VALUE))
                                        .addGroup(jPanelPSRouletteLayout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                );
                jPanelPSRouletteLayout.setVerticalGroup(
                        jPanelPSRouletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelPSRouletteLayout.createSequentialGroup()
                                .addGroup(jPanelPSRouletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                jPanelPSDynamic.add(jPanelPSRoulette, "card2");

                jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
                jLabel2.setText("Elite Selection");

                jScrollPane3.setBorder(null);

                tablePS3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tablePS3.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tablePS3.getTableHeader().setReorderingAllowed(false);
                jScrollPane3.setViewportView(tablePS3);

                jLabel6.setText("Populácia");

                jScrollPane4.setBorder(null);

                tablePS4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tablePS4.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tablePS4.getTableHeader().setReorderingAllowed(false);
                jScrollPane4.setViewportView(tablePS4);

                jLabel7.setText("Vybraní rodičia");

                javax.swing.GroupLayout jPanelPSEliteLayout = new javax.swing.GroupLayout(jPanelPSElite);
                jPanelPSElite.setLayout(jPanelPSEliteLayout);
                jPanelPSEliteLayout.setHorizontalGroup(
                        jPanelPSEliteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelPSEliteLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelPSEliteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPSEliteLayout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 364, Short.MAX_VALUE)
                                                .addComponent(jLabel2))
                                        .addGroup(jPanelPSEliteLayout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(jPanelPSEliteLayout.createSequentialGroup()
                                                .addGroup(jPanelPSEliteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                );
                jPanelPSEliteLayout.setVerticalGroup(
                        jPanelPSEliteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelPSEliteLayout.createSequentialGroup()
                                .addGroup(jPanelPSEliteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addGroup(jPanelPSEliteLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                jPanelPSDynamic.add(jPanelPSElite, "card3");

                jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
                jLabel3.setText("Tournament Selection");

                jScrollPane5.setBorder(null);

                tablePS5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tablePS5.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tablePS5.getTableHeader().setReorderingAllowed(false);
                jScrollPane5.setViewportView(tablePS5);

                jScrollPane6.setBorder(null);

                tablePS6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tablePS6.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tablePS6.getTableHeader().setReorderingAllowed(false);
                jScrollPane6.setViewportView(tablePS6);

                jLabel8.setText("Populácia");

                jLabel9.setText("Vybraní rodičia");

                jScrollPane7.setBorder(null);

                tablePS7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tablePS7.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tablePS7.getTableHeader().setReorderingAllowed(false);
                jScrollPane7.setViewportView(tablePS7);

                jLabel10.setText("Ukážka výberu prvého rodiča");

                javax.swing.GroupLayout jPanelPSTournamentLayout = new javax.swing.GroupLayout(jPanelPSTournament);
                jPanelPSTournament.setLayout(jPanelPSTournamentLayout);
                jPanelPSTournamentLayout.setHorizontalGroup(
                        jPanelPSTournamentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelPSTournamentLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelPSTournamentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPSTournamentLayout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3))
                                        .addGroup(jPanelPSTournamentLayout.createSequentialGroup()
                                                .addGroup(jPanelPSTournamentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelPSTournamentLayout.createSequentialGroup()
                                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(jPanelPSTournamentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel10))))
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanelPSTournamentLayout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                );
                jPanelPSTournamentLayout.setVerticalGroup(
                        jPanelPSTournamentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelPSTournamentLayout.createSequentialGroup()
                                .addGroup(jPanelPSTournamentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanelPSTournamentLayout.createSequentialGroup()
                                                .addGroup(jPanelPSTournamentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanelPSTournamentLayout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addGap(14, 14, 14))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPSTournamentLayout.createSequentialGroup()
                                                                .addComponent(jLabel8)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanelPSTournamentLayout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                jPanelPSDynamic.add(jPanelPSTournament, "card4");

                jButtonPrevCycle.setText("<< Prev cycle");
                jButtonPrevCycle.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrevCycle.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrevCycleActionPerformed(evt);
                        }
                });
                jButtonPrevCycle.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                jButtonPrevCycleFocusGained(evt);
                        }
                });

                javax.swing.GroupLayout jPanelParentSelectionLayout = new javax.swing.GroupLayout(jPanelParentSelection);
                jPanelParentSelection.setLayout(jPanelParentSelectionLayout);
                jPanelParentSelectionLayout.setHorizontalGroup(
                        jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelParentSelectionLayout.createSequentialGroup()
                                .addGroup(jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanelParentSelectionLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanelPSDynamic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanelParentSelectionLayout.createSequentialGroup()
                                                .addGap(56, 56, 56)
                                                .addGroup(jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelParentSelectionLayout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(jLabelCycleNo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(jPanelParentSelectionLayout.createSequentialGroup()
                                                                .addGroup(jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jButtonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButtonPrev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButtonPrevCycle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jButtonNextCycle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButtonResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jButtonNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addContainerGap())
                );

                jPanelParentSelectionLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonExit, jButtonNext, jButtonNextCycle, jButtonPrev, jButtonResults});

                jPanelParentSelectionLayout.setVerticalGroup(
                        jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelParentSelectionLayout.createSequentialGroup()
                                .addComponent(jLabelCycleNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelPSDynamic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButtonNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonPrev, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonNextCycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonPrevCycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelParentSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButtonResults, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonExit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                );

                jPanelParentSelectionLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonExit, jButtonNext, jButtonNextCycle, jButtonPrev, jButtonResults});

                jPanelDynamic.add(jPanelParentSelection, "card2");

                jPanelRecombination.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recombination", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Serif", 1, 18))); // NOI18N
                jPanelRecombination.setMaximumSize(new java.awt.Dimension(560, 520));
                jPanelRecombination.setMinimumSize(new java.awt.Dimension(560, 520));
                jPanelRecombination.setPreferredSize(new java.awt.Dimension(560, 520));
                jPanelRecombination.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                        public void propertyChange(java.beans.PropertyChangeEvent evt) {
                                jPanelRecombinationPropertyChange(evt);
                        }
                });

                jButtonPrev1.setText("< Prev (Parent selection)");
                jButtonPrev1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrev1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrev1ActionPerformed(evt);
                        }
                });

                jButtonNext1.setText("Next (Mutation) >");
                jButtonNext1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNext1.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNext1.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNext1.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNext1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNext1ActionPerformed(evt);
                        }
                });

                jButtonNextCycle1.setText("Next cycle >>");
                jButtonNextCycle1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNextCycle1.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle1.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle1.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNextCycle1ActionPerformed(evt);
                        }
                });

                jButtonResults1.setText("Skip to results");
                jButtonResults1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonResults1.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonResults1.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonResults1.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonResults1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonResults1ActionPerformed(evt);
                        }
                });

                jButtonExit1.setText("Exit Simulation");
                jButtonExit1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonExit1.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonExit1.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonExit1.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonExit1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonExit1ActionPerformed(evt);
                        }
                });

                jLabelCycleNo1.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
                jLabelCycleNo1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jLabelCycleNo1.setText("jLabel1");

                jScrollPane8.setBorder(null);

                tableREC1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableREC1.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableREC1.getTableHeader().setReorderingAllowed(false);
                jScrollPane8.setViewportView(tableREC1);

                jScrollPane9.setBorder(null);

                tableREC2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableREC2.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableREC2.getTableHeader().setReorderingAllowed(false);
                jScrollPane9.setViewportView(tableREC2);

                jLabel11.setText("jLabel11");

                jLabel12.setText("Ukážka rekombinácie v bodoch:");

                jLabel13.setText("Rodičia");

                jScrollPane10.setBorder(null);

                tableREC3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableREC3.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableREC3.getTableHeader().setReorderingAllowed(false);
                jScrollPane10.setViewportView(tableREC3);

                jLabel14.setText("Nová generácia po rekombinácii");

                jScrollPane11.setEnabled(false);
                jScrollPane11.setFocusable(false);

                jTextArea1.setEditable(false);
                jTextArea1.setColumns(20);
                jTextArea1.setRows(5);
                jTextArea1.setText("Pozn: v prípade že súhrnný\nobjem položiek v knapsacku\nprevyšuje jeho maximálny\nobjem, je náhodne invertovaný \njeden bit (1->0) tak, aby\nobjem klesol pod túto max. \nhodnotu.");
                jTextArea1.setAutoscrolls(false);
                jTextArea1.setFocusable(false);
                jScrollPane11.setViewportView(jTextArea1);

                jButtonPrevCycle1.setText("<< Prev cycle");
                jButtonPrevCycle1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrevCycle1.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle1.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle1.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrevCycle1ActionPerformed(evt);
                        }
                });
                jButtonPrevCycle1.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                jButtonPrevCycle1FocusGained(evt);
                        }
                });

                javax.swing.GroupLayout jPanelRecombinationLayout = new javax.swing.GroupLayout(jPanelRecombination);
                jPanelRecombination.setLayout(jPanelRecombinationLayout);
                jPanelRecombinationLayout.setHorizontalGroup(
                        jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                                .addContainerGap(416, Short.MAX_VALUE)
                                                .addComponent(jLabelCycleNo1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                                .addGap(56, 56, 56)
                                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jButtonExit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonPrev1)
                                                        .addComponent(jButtonPrevCycle1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButtonNextCycle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonResults1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonNext1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel14)
                                                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                                                .addGap(30, 30, 30)
                                                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel11)
                                                                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel12)))
                                                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                                                .addGap(28, 28, 28)
                                                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap())
                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                jPanelRecombinationLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonExit1, jButtonNext1, jButtonNextCycle1, jButtonPrev1, jButtonResults1});

                jPanelRecombinationLayout.setVerticalGroup(
                        jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRecombinationLayout.createSequentialGroup()
                                .addComponent(jLabelCycleNo1)
                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)
                                                .addComponent(jLabel14)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                        .addGroup(jPanelRecombinationLayout.createSequentialGroup()
                                                .addGap(63, 63, 63)
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButtonNext1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonPrev1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonNextCycle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonPrevCycle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelRecombinationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButtonResults1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonExit1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                );

                jPanelRecombinationLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonExit1, jButtonNext1, jButtonNextCycle1, jButtonPrev1, jButtonResults1});

                jPanelDynamic.add(jPanelRecombination, "card2");

                jPanelMutation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mutation", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Serif", 1, 18))); // NOI18N
                jPanelMutation.setMaximumSize(new java.awt.Dimension(560, 520));
                jPanelMutation.setMinimumSize(new java.awt.Dimension(560, 520));
                jPanelMutation.setPreferredSize(new java.awt.Dimension(560, 520));
                jPanelMutation.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                        public void propertyChange(java.beans.PropertyChangeEvent evt) {
                                jPanelMutationPropertyChange(evt);
                        }
                });

                jButtonPrev2.setText("< Prev (Recombination)");
                jButtonPrev2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrev2.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonPrev2.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonPrev2.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonPrev2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrev2ActionPerformed(evt);
                        }
                });

                jButtonNext2.setText("Next (Reinsertion) >");
                jButtonNext2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNext2.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNext2.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNext2.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNext2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNext2ActionPerformed(evt);
                        }
                });

                jButtonNextCycle2.setText("Next cycle >>");
                jButtonNextCycle2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNextCycle2.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle2.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle2.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNextCycle2ActionPerformed(evt);
                        }
                });

                jButtonResults2.setText("Skip to results");
                jButtonResults2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonResults2.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonResults2.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonResults2.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonResults2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonResults2ActionPerformed(evt);
                        }
                });

                jButtonExit2.setText("Exit Simulation");
                jButtonExit2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonExit2.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonExit2.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonExit2.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonExit2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonExit2ActionPerformed(evt);
                        }
                });

                jLabelCycleNo2.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
                jLabelCycleNo2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jLabelCycleNo2.setText("jLabel1");

                jScrollPane12.setBorder(null);

                tableMUT1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableMUT1.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableMUT1.getTableHeader().setReorderingAllowed(false);
                jScrollPane12.setViewportView(tableMUT1);

                jLabel15.setText("Nová generácia pred mutáciou");

                jScrollPane13.setBorder(null);

                tableMUT2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableMUT2.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableMUT2.getTableHeader().setReorderingAllowed(false);
                jScrollPane13.setViewportView(tableMUT2);

                jLabel16.setText("jLabel16");

                jLabel17.setText("Pred a po:");

                jScrollPane14.setBorder(null);

                tableMUT3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableMUT3.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableMUT3.getTableHeader().setReorderingAllowed(false);
                jScrollPane14.setViewportView(tableMUT3);

                jLabel18.setText("Generácia po mutácii");

                jButtonPrevCycle2.setText("<< Prev cycle");
                jButtonPrevCycle2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrevCycle2.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle2.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle2.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrevCycle2ActionPerformed(evt);
                        }
                });
                jButtonPrevCycle2.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                jButtonPrevCycle2FocusGained(evt);
                        }
                });

                javax.swing.GroupLayout jPanelMutationLayout = new javax.swing.GroupLayout(jPanelMutation);
                jPanelMutation.setLayout(jPanelMutationLayout);
                jPanelMutationLayout.setHorizontalGroup(
                        jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                .addGap(56, 416, Short.MAX_VALUE)
                                                .addComponent(jLabelCycleNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMutationLayout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(28, 28, 28))
                                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                                                .addGap(56, 56, 56)
                                                                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                                        .addComponent(jButtonPrev2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(jButtonExit2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(jButtonPrevCycle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                                                .addContainerGap()
                                                                                .addComponent(jLabel15)))
                                                                .addGap(18, 18, 18)))
                                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                                .addComponent(jButtonNextCycle2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(jButtonResults2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(jButtonNext2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addComponent(jLabel18)
                                                                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel16)
                                                                        .addComponent(jLabel17))
                                                                .addGap(0, 0, Short.MAX_VALUE)))))
                                .addContainerGap())
                );
                jPanelMutationLayout.setVerticalGroup(
                        jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMutationLayout.createSequentialGroup()
                                .addComponent(jLabelCycleNo2)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17)
                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(9, 9, 9)
                                                .addComponent(jLabel18)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                                .addGap(5, 5, 5))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMutationLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(75, 75, 75)))
                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonPrev2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonNext2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanelMutationLayout.createSequentialGroup()
                                                .addGroup(jPanelMutationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButtonNextCycle2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButtonPrevCycle2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButtonResults2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                );

                jPanelMutationLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonExit2, jButtonNext2, jButtonResults2});

                jPanelDynamic.add(jPanelMutation, "card2");

                jPanelReinsertion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reinsertion", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("DejaVu Serif", 1, 18))); // NOI18N
                jPanelReinsertion.setMaximumSize(new java.awt.Dimension(560, 520));
                jPanelReinsertion.setMinimumSize(new java.awt.Dimension(560, 520));
                jPanelReinsertion.setPreferredSize(new java.awt.Dimension(560, 520));
                jPanelReinsertion.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                        public void propertyChange(java.beans.PropertyChangeEvent evt) {
                                jPanelReinsertionPropertyChange(evt);
                        }
                });

                jButtonPrev3.setText("< Prev (Mutation)");
                jButtonPrev3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrev3.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonPrev3.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonPrev3.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonPrev3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrev3ActionPerformed(evt);
                        }
                });

                jButtonNext3.setText("Next (Parent selection) >");
                jButtonNext3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNext3.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNext3.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNext3.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNext3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNext3ActionPerformed(evt);
                        }
                });

                jButtonNextCycle3.setText("Next cycle >>");
                jButtonNextCycle3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonNextCycle3.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle3.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle3.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonNextCycle3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonNextCycle3ActionPerformed(evt);
                        }
                });

                jButtonResults3.setText("Skip to results");
                jButtonResults3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                jButtonResults3.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonResults3.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonResults3.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonResults3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonResults3ActionPerformed(evt);
                        }
                });

                jButtonExit3.setText("Exit Simulation");
                jButtonExit3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonExit3.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonExit3.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonExit3.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonExit3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonExit3ActionPerformed(evt);
                        }
                });

                jLabelCycleNo3.setFont(new java.awt.Font("DejaVu Serif", 1, 14)); // NOI18N
                jLabelCycleNo3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jLabelCycleNo3.setText("jLabel1");

                jScrollPane15.setBorder(null);

                tableREIN1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableREIN1.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableREIN1.getTableHeader().setReorderingAllowed(false);
                jScrollPane15.setViewportView(tableREIN1);

                jLabel19.setText("Stará populácia");

                jScrollPane16.setBorder(null);

                tableREIN2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
                tableREIN2.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {

                        }
                ));
                tableREIN2.getTableHeader().setReorderingAllowed(false);
                jScrollPane16.setViewportView(tableREIN2);

                jLabel20.setText("jLabel20");

                jLabel21.setText("Nová populácia");

                jButtonPrevCycle3.setText("<< Prev cycle");
                jButtonPrevCycle3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                jButtonPrevCycle3.setMaximumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle3.setMinimumSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle3.setPreferredSize(new java.awt.Dimension(210, 25));
                jButtonPrevCycle3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButtonPrevCycle3ActionPerformed(evt);
                        }
                });
                jButtonPrevCycle3.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                jButtonPrevCycle3FocusGained(evt);
                        }
                });

                javax.swing.GroupLayout jPanelReinsertionLayout = new javax.swing.GroupLayout(jPanelReinsertion);
                jPanelReinsertion.setLayout(jPanelReinsertionLayout);
                jPanelReinsertionLayout.setHorizontalGroup(
                        jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelReinsertionLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReinsertionLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabelCycleNo3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanelReinsertionLayout.createSequentialGroup()
                                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jButtonPrev3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonExit3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonPrevCycle3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButtonNextCycle3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButtonNext3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButtonResults3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 43, Short.MAX_VALUE)))
                                .addContainerGap())
                        .addGroup(jPanelReinsertionLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel19))
                                .addGap(30, 30, 30)
                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel20)
                                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel21))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                jPanelReinsertionLayout.setVerticalGroup(
                        jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReinsertionLayout.createSequentialGroup()
                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelReinsertionLayout.createSequentialGroup()
                                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanelReinsertionLayout.createSequentialGroup()
                                                                .addGap(118, 118, 118)
                                                                .addComponent(jLabel21)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel20))
                                                        .addComponent(jLabelCycleNo3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReinsertionLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(79, 79, 79)))
                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonPrev3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonNext3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonNextCycle3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonPrevCycle3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelReinsertionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonExit3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonResults3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                );

                jPanelReinsertionLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonExit3, jButtonNext3, jButtonNextCycle3, jButtonResults3});

                jPanelDynamic.add(jPanelReinsertion, "card2");

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanelDynamic, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanelDynamic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void jButtonNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNext1ActionPerformed
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		jPanelDynamic.add(jPanelMutation);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
        }//GEN-LAST:event_jButtonNext1ActionPerformed

        private void jButtonNext2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNext2ActionPerformed
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		jPanelDynamic.add(jPanelReinsertion);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
        }//GEN-LAST:event_jButtonNext2ActionPerformed

        private void jButtonNext3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNext3ActionPerformed
		nextCycle();
        }//GEN-LAST:event_jButtonNext3ActionPerformed

        private void jButtonPrev3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrev3ActionPerformed
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		jPanelDynamic.add(jPanelMutation);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
        }//GEN-LAST:event_jButtonPrev3ActionPerformed

        private void jButtonPrev2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrev2ActionPerformed
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		jPanelDynamic.add(jPanelRecombination);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
        }//GEN-LAST:event_jButtonPrev2ActionPerformed

        private void jButtonPrev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrev1ActionPerformed
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		jPanelDynamic.add(jPanelParentSelection);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
        }//GEN-LAST:event_jButtonPrev1ActionPerformed

        private void jButtonExit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExit2ActionPerformed
		int confirmed = JOptionPane.showConfirmDialog(
			null,
			"Are you sure you want to exit this simulation?",
			"Exit simulation confirmation",
			JOptionPane.YES_NO_OPTION);
		if (confirmed == JOptionPane.YES_OPTION) {
			this.dispose();
		}
        }//GEN-LAST:event_jButtonExit2ActionPerformed

        private void jButtonExit3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExit3ActionPerformed
		int confirmed = JOptionPane.showConfirmDialog(
			null,
			"Are you sure you want to exit this simulation?",
			"Exit simulation confirmation",
			JOptionPane.YES_NO_OPTION);
		if (confirmed == JOptionPane.YES_OPTION) {
			this.dispose();
		}
        }//GEN-LAST:event_jButtonExit3ActionPerformed

        private void jButtonExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExit1ActionPerformed
		int confirmed = JOptionPane.showConfirmDialog(
			null,
			"Are you sure you want to exit this simulation?",
			"Exit simulation confirmation",
			JOptionPane.YES_NO_OPTION);
		if (confirmed == JOptionPane.YES_OPTION) {
			this.dispose();
		}
        }//GEN-LAST:event_jButtonExit1ActionPerformed

        private void jButtonResults2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResults2ActionPerformed
		skipToEnd();
        }//GEN-LAST:event_jButtonResults2ActionPerformed

        private void jButtonResults3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResults3ActionPerformed
		skipToEnd();
        }//GEN-LAST:event_jButtonResults3ActionPerformed

        private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        }//GEN-LAST:event_formWindowActivated

        private void jPanelReinsertionPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanelReinsertionPropertyChange
		if (ga != null) {
			if (currentCycle == 1) {
				jButtonPrevCycle3.setEnabled(false);
			} else {
				jButtonPrevCycle3.setEnabled(true);
			}
			if (currentCycle == ga.cyclesPerformed() && ga.simulationComplete()) {
				jButtonNext3.setEnabled(false);
				jButtonNextCycle3.setEnabled(false);
				jButtonResults3.setEnabled(false);
			} else {
				jButtonNext3.setEnabled(true);
				jButtonNextCycle3.setEnabled(true);
				jButtonResults3.setEnabled(true);
			}
			fillInReinsertion();
		}
		jLabelCycleNo3.setText("Iterácia " + currentCycle);
        }//GEN-LAST:event_jPanelReinsertionPropertyChange

        private void jButtonNextCycle3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextCycle3ActionPerformed
		nextCycle();
        }//GEN-LAST:event_jButtonNextCycle3ActionPerformed

        private void jPanelMutationPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanelMutationPropertyChange
		if (ga != null) {
			if (currentCycle == 1) {
				jButtonPrevCycle2.setEnabled(false);
			} else {
				jButtonPrevCycle2.setEnabled(true);
			}
			if (currentCycle == ga.cyclesPerformed() && ga.simulationComplete()) {
				jButtonNextCycle2.setEnabled(false);
			} else {
				jButtonNextCycle2.setEnabled(true);
			}
			fillInMutation();
		}
		jLabelCycleNo2.setText("Iterácia " + currentCycle);
        }//GEN-LAST:event_jPanelMutationPropertyChange

        private void jPanelRecombinationPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanelRecombinationPropertyChange
		if (ga != null) {
			if (currentCycle == 1) {
				jButtonPrevCycle1.setEnabled(false);
			} else {
				jButtonPrevCycle1.setEnabled(true);
			}
			if (currentCycle == ga.cyclesPerformed() && ga.simulationComplete()) {
				jButtonNextCycle1.setEnabled(false);
			} else {
				jButtonNextCycle1.setEnabled(true);
			}
			fillInRecombination();
		}
		jLabelCycleNo1.setText("Iterácia " + currentCycle);
        }//GEN-LAST:event_jPanelRecombinationPropertyChange

        private void jButtonNextCycle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextCycle2ActionPerformed
		nextCycle();
        }//GEN-LAST:event_jButtonNextCycle2ActionPerformed

        private void jButtonNextCycle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextCycle1ActionPerformed
		nextCycle();
        }//GEN-LAST:event_jButtonNextCycle1ActionPerformed

        private void jButtonResults1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResults1ActionPerformed
		skipToEnd();
        }//GEN-LAST:event_jButtonResults1ActionPerformed

        private void jPanelParentSelectionPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jPanelParentSelectionPropertyChange
                if (currentCycle == 1) {
                        jButtonPrev.setEnabled(false);
			jButtonPrevCycle.setEnabled(false);
                } else {
                        jButtonPrev.setEnabled(true);
			jButtonPrevCycle.setEnabled(true);
                }
                /*
                * Perform when ga is not null, surprisingly
                */
                if (ga != null) {
                        if (currentCycle == ga.cyclesPerformed() && ga.simulationComplete()) {
                                jButtonNextCycle.setEnabled(false);
                        } else {
                                jButtonNextCycle.setEnabled(true);
			}
                        switch (ga.simulationData.get(0).pselType) {
                                case ROULETTE:
                                fillInPSRoulette();
                                break;
                                case ELITE:
                                fillInPSElite();
                                break;
                                case TOURNAMENT:
                                fillInPSTournament();
                                break;
                                default:
                        }
                }
                jLabelCycleNo.setText("Iterácia " + currentCycle);
                //jPanelDynamic.repaint();
                //jPanelDynamic.revalidate();
        }//GEN-LAST:event_jPanelParentSelectionPropertyChange

        private void jPanelParentSelectionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelParentSelectionFocusGained

        }//GEN-LAST:event_jPanelParentSelectionFocusGained

        private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
                int confirmed = JOptionPane.showConfirmDialog(
                        null,
                        "Are you sure you want to exit this simulation?",
                        "Exit simulation confirmation",
                        JOptionPane.YES_NO_OPTION);
                if (confirmed == JOptionPane.YES_OPTION) {
                        this.dispose();
                }
        }//GEN-LAST:event_jButtonExitActionPerformed

        private void jButtonResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResultsActionPerformed
                skipToEnd();
        }//GEN-LAST:event_jButtonResultsActionPerformed

        private void jButtonNextCyclePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jButtonNextCyclePropertyChange
                // TODO add your handling code here:
        }//GEN-LAST:event_jButtonNextCyclePropertyChange

        private void jButtonNextCycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextCycleActionPerformed
                nextCycle();
        }//GEN-LAST:event_jButtonNextCycleActionPerformed

        private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
                jPanelDynamic.removeAll();
                jPanelDynamic.repaint();
                jPanelDynamic.revalidate();

                jPanelDynamic.add(jPanelRecombination);
                jPanelDynamic.repaint();
                jPanelDynamic.revalidate();
        }//GEN-LAST:event_jButtonNextActionPerformed

        private void jButtonPrevFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonPrevFocusGained

        }//GEN-LAST:event_jButtonPrevFocusGained

        private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
                currentCycle--;
                jPanelDynamic.removeAll();
                jPanelDynamic.repaint();
                jPanelDynamic.revalidate();

                jPanelDynamic.add(jPanelReinsertion);
                jPanelDynamic.repaint();
                jPanelDynamic.revalidate();
        }//GEN-LAST:event_jButtonPrevActionPerformed

        private void jButtonPrevCycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevCycleActionPerformed
		prevCycle();
        }//GEN-LAST:event_jButtonPrevCycleActionPerformed

        private void jButtonPrevCycleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonPrevCycleFocusGained
                // TODO add your handling code here:
        }//GEN-LAST:event_jButtonPrevCycleFocusGained

        private void jButtonPrevCycle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevCycle1ActionPerformed
		prevCycle();
        }//GEN-LAST:event_jButtonPrevCycle1ActionPerformed

        private void jButtonPrevCycle1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonPrevCycle1FocusGained
                // TODO add your handling code here:
        }//GEN-LAST:event_jButtonPrevCycle1FocusGained

        private void jButtonPrevCycle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevCycle2ActionPerformed
		prevCycle();
        }//GEN-LAST:event_jButtonPrevCycle2ActionPerformed

        private void jButtonPrevCycle2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonPrevCycle2FocusGained
                // TODO add your handling code here:
        }//GEN-LAST:event_jButtonPrevCycle2FocusGained

        private void jButtonPrevCycle3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevCycle3ActionPerformed
		prevCycle();
        }//GEN-LAST:event_jButtonPrevCycle3ActionPerformed

        private void jButtonPrevCycle3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonPrevCycle3FocusGained
                // TODO add your handling code here:
        }//GEN-LAST:event_jButtonPrevCycle3FocusGained

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(GASimulationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(GASimulationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(GASimulationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(GASimulationUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new GASimulationUI().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton jButtonExit;
        private javax.swing.JButton jButtonExit1;
        private javax.swing.JButton jButtonExit2;
        private javax.swing.JButton jButtonExit3;
        private javax.swing.JButton jButtonNext;
        private javax.swing.JButton jButtonNext1;
        private javax.swing.JButton jButtonNext2;
        private javax.swing.JButton jButtonNext3;
        private javax.swing.JButton jButtonNextCycle;
        private javax.swing.JButton jButtonNextCycle1;
        private javax.swing.JButton jButtonNextCycle2;
        private javax.swing.JButton jButtonNextCycle3;
        private javax.swing.JButton jButtonPrev;
        private javax.swing.JButton jButtonPrev1;
        private javax.swing.JButton jButtonPrev2;
        private javax.swing.JButton jButtonPrev3;
        private javax.swing.JButton jButtonPrevCycle;
        private javax.swing.JButton jButtonPrevCycle1;
        private javax.swing.JButton jButtonPrevCycle2;
        private javax.swing.JButton jButtonPrevCycle3;
        private javax.swing.JButton jButtonResults;
        private javax.swing.JButton jButtonResults1;
        private javax.swing.JButton jButtonResults2;
        private javax.swing.JButton jButtonResults3;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel10;
        private javax.swing.JLabel jLabel11;
        private javax.swing.JLabel jLabel12;
        private javax.swing.JLabel jLabel13;
        private javax.swing.JLabel jLabel14;
        private javax.swing.JLabel jLabel15;
        private javax.swing.JLabel jLabel16;
        private javax.swing.JLabel jLabel17;
        private javax.swing.JLabel jLabel18;
        private javax.swing.JLabel jLabel19;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel20;
        private javax.swing.JLabel jLabel21;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JLabel jLabel8;
        private javax.swing.JLabel jLabel9;
        private javax.swing.JLabel jLabelCycleNo;
        private javax.swing.JLabel jLabelCycleNo1;
        private javax.swing.JLabel jLabelCycleNo2;
        private javax.swing.JLabel jLabelCycleNo3;
        private javax.swing.JPanel jPanelDynamic;
        private javax.swing.JPanel jPanelMutation;
        private javax.swing.JPanel jPanelPSDynamic;
        private javax.swing.JPanel jPanelPSElite;
        private javax.swing.JPanel jPanelPSRoulette;
        private javax.swing.JPanel jPanelPSTournament;
        private javax.swing.JPanel jPanelParentSelection;
        private javax.swing.JPanel jPanelRecombination;
        private javax.swing.JPanel jPanelReinsertion;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane10;
        private javax.swing.JScrollPane jScrollPane11;
        private javax.swing.JScrollPane jScrollPane12;
        private javax.swing.JScrollPane jScrollPane13;
        private javax.swing.JScrollPane jScrollPane14;
        private javax.swing.JScrollPane jScrollPane15;
        private javax.swing.JScrollPane jScrollPane16;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JScrollPane jScrollPane3;
        private javax.swing.JScrollPane jScrollPane4;
        private javax.swing.JScrollPane jScrollPane5;
        private javax.swing.JScrollPane jScrollPane6;
        private javax.swing.JScrollPane jScrollPane7;
        private javax.swing.JScrollPane jScrollPane8;
        private javax.swing.JScrollPane jScrollPane9;
        private javax.swing.JTextArea jTextArea1;
        private javax.swing.JTable tableMUT1;
        private javax.swing.JTable tableMUT2;
        private javax.swing.JTable tableMUT3;
        private javax.swing.JTable tablePS1;
        private javax.swing.JTable tablePS2;
        private javax.swing.JTable tablePS3;
        private javax.swing.JTable tablePS4;
        private javax.swing.JTable tablePS5;
        private javax.swing.JTable tablePS6;
        private javax.swing.JTable tablePS7;
        private javax.swing.JTable tableREC1;
        private javax.swing.JTable tableREC2;
        private javax.swing.JTable tableREC3;
        private javax.swing.JTable tableREIN1;
        private javax.swing.JTable tableREIN2;
        // End of variables declaration//GEN-END:variables

	private void skipToEnd() {
		while (currentCycle < ga.cyclesPerformed()) {
			currentCycle++;
		}
		while (!ga.simulationComplete()) {
			ga.performCycle();
			currentCycle++;
		}
		jPanelDynamic.removeAll();
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();

		jPanelDynamic.add(jPanelReinsertion);
		jPanelDynamic.repaint();
		jPanelDynamic.revalidate();
	}

	/*
	* fill tables for roulette selection
	*/
	private void fillInPSRoulette() {
		Object[][] data1 = new Object[ga.getPopulationSize()][6];
		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data1[i][0] = Integer.toString(i+1);
			data1[i][1] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data1[i][2] = ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getVolume();
			data1[i][3] = ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getFitnessValue();
			data1[i][4] = String.format("%.2f", ga.simulationData.get(currentCycle-1).pselRselValByProportion.get(i));
			data1[i][5] = String.format("%.2f", ga.simulationData.get(currentCycle-1).pselRselCumValByProportion.get(i));
		}
		DefaultTableModel model1 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}} ;
		model1.addColumn("ID");
		model1.addColumn("Populácia");
		model1.addColumn("Objem");
		model1.addColumn("Hodnota");
		model1.addColumn("Proporčne");
		model1.addColumn("Kumulatívne");
		tablePS1.setModel(model1);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model1.addRow(data1[i]);
		}
		tablePS1.getColumnModel().getColumn(0).setPreferredWidth(27);
		tablePS1.getColumnModel().getColumn(0).setMaxWidth(27);
		tablePS1.getColumnModel().getColumn(1).setPreferredWidth(80);
		tablePS1.getColumnModel().getColumn(1).setMaxWidth(80);
		tablePS1.getColumnModel().getColumn(2).setPreferredWidth(50);
		tablePS1.getColumnModel().getColumn(2).setMaxWidth(50);
		tablePS1.getColumnModel().getColumn(3).setPreferredWidth(72);
		tablePS1.getColumnModel().getColumn(3).setMaxWidth(72);
		tablePS1.getColumnModel().getColumn(4).setPreferredWidth(80);
		tablePS1.getColumnModel().getColumn(4).setMaxWidth(80);
		tablePS1.getColumnModel().getColumn(5).setPreferredWidth(60);

		// second table
		Object[][] data2 = new Object[ga.getNoParents()][4];
		for (int i = 0; i < ga.getNoParents(); i++) {
			data2[i][0] = String.format("%.2f", ga.simulationData.get(currentCycle-1).pselRselRandomNumbers.get(i));
			data2[i][2] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).pselParents.get(i).getChromosome()& 0XFF)).replace(' ', '0');
			for (int j = 0; j < ga.getPopulationSize(); j++) {
				if ((((String)data1[j][1]).equals((String)data2[i][2])) && 
					ga.simulationData.get(currentCycle-1).pselRselRandomNumbers.get(i) < ga.simulationData.get(currentCycle-1).pselRselCumValByProportion.get(j)) {
					data2[i][1] = data1[j][0];
					data2[i][3] = data1[j][3];
					break;
				}
			}
		}
		DefaultTableModel model2 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}} ;
		model2.addColumn("Náhodná hodnota");
		model2.addColumn("ID");
		model2.addColumn("Rodič");
		model2.addColumn("Hodnota");
		tablePS2.setModel(model2);
		for(int i = 0; i < ga.getNoParents(); i++) {
			model2.addRow(data2[i]);
		}
		tablePS2.getColumnModel().getColumn(0).setPreferredWidth(140);
		tablePS2.getColumnModel().getColumn(0).setMaxWidth(140);
		tablePS2.getColumnModel().getColumn(1).setPreferredWidth(27);
		tablePS2.getColumnModel().getColumn(1).setMaxWidth(27);
		tablePS2.getColumnModel().getColumn(2).setPreferredWidth(80);
		tablePS2.getColumnModel().getColumn(2).setMaxWidth(80);
		tablePS2.getColumnModel().getColumn(3).setPreferredWidth(80);
	}

	/*
	* fill tables for elite selection
	*/
	private void fillInPSElite() {
		Object[][] data1 = new Object[ga.getPopulationSize()][3];
		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data1[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data1[i][1] = ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getVolume();
			data1[i][2] = ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getFitnessValue();
		}
		DefaultTableModel model1 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}} ;
		model1.addColumn("Populácia");
		model1.addColumn("Objem");
		model1.addColumn("Hodnota");
		tablePS3.setModel(model1);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model1.addRow(data1[i]);
		}
		tablePS3.getColumnModel().getColumn(0).setPreferredWidth(80);
		tablePS3.getColumnModel().getColumn(0).setMaxWidth(80);
		tablePS3.getColumnModel().getColumn(1).setPreferredWidth(50);
		tablePS3.getColumnModel().getColumn(1).setMaxWidth(50);
		tablePS3.getColumnModel().getColumn(2).setPreferredWidth(72);

		// tabulka2
		Object[][] data2 = new Object[ga.getNoParents()][3];
		for (int i = 0; i < ga.getNoParents(); i++) {
			data2[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).pselParents.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data2[i][1] = ga.simulationData.get(currentCycle-1).pselParents.get(i).getVolume();
			data2[i][2] = ga.simulationData.get(currentCycle-1).pselParents.get(i).getFitnessValue();
		}
		DefaultTableModel model2 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}} ;
		model2.addColumn("Rodič");
		model2.addColumn("Objem");
		model2.addColumn("Hodnota");
		tablePS4.setModel(model2);
		for(int i = 0; i < ga.getNoParents(); i++) {
			model2.addRow(data2[i]);
		}
		tablePS4.getColumnModel().getColumn(0).setPreferredWidth(80);
		tablePS4.getColumnModel().getColumn(0).setMaxWidth(80);
		tablePS4.getColumnModel().getColumn(1).setPreferredWidth(50);
		tablePS4.getColumnModel().getColumn(1).setMaxWidth(50);
		tablePS4.getColumnModel().getColumn(2).setPreferredWidth(72);
	}

	/*
	* fill in tournament selection tables
	*/
	private void fillInPSTournament() {
		Object[][] data1 = new Object[ga.getPopulationSize()][3];
		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data1[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data1[i][1] = ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getVolume();
			data1[i][2] = ga.simulationData.get(currentCycle-1).oldPopulation.get(i).getFitnessValue();
		}
		DefaultTableModel model1 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}} ;
		model1.addColumn("Populácia");
		model1.addColumn("Objem");
		model1.addColumn("Hodnota");
		tablePS5.setModel(model1);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model1.addRow(data1[i]);
		}
		tablePS5.getColumnModel().getColumn(0).setPreferredWidth(80);
		tablePS5.getColumnModel().getColumn(0).setMaxWidth(80);
		tablePS5.getColumnModel().getColumn(1).setPreferredWidth(50);
		tablePS5.getColumnModel().getColumn(1).setMaxWidth(50);
		tablePS5.getColumnModel().getColumn(2).setPreferredWidth(72);

		// tabulka2
		Object[][] data2 = new Object[ga.getNoParents()][3];
		for (int i = 0; i < ga.getNoParents(); i++) {
			data2[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).pselParents.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data2[i][1] = ga.simulationData.get(currentCycle-1).pselParents.get(i).getVolume();
			data2[i][2] = ga.simulationData.get(currentCycle-1).pselParents.get(i).getFitnessValue();
		}
		DefaultTableModel model2 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}} ;
		model2.addColumn("Rodič");
		model2.addColumn("Objem");
		model2.addColumn("Hodnota");
		tablePS6.setModel(model2);
		for(int i = 0; i < ga.getNoParents(); i++) {
			model2.addRow(data2[i]);
		}
		tablePS6.getColumnModel().getColumn(0).setPreferredWidth(80);
		tablePS6.getColumnModel().getColumn(0).setMaxWidth(80);
		tablePS6.getColumnModel().getColumn(1).setPreferredWidth(50);
		tablePS6.getColumnModel().getColumn(1).setMaxWidth(50);
		tablePS6.getColumnModel().getColumn(2).setPreferredWidth(72);

		// sample table
		Object[][] data3 = new Object[ga.getNoParents()][3];
		for (int i = 0; i < ga.getNoParents(); i++) {
			data3[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).pselTsel.get(0).get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data3[i][1] = ga.simulationData.get(currentCycle-1).pselTsel.get(0).get(i).getVolume();
			data3[i][2] = ga.simulationData.get(currentCycle-1).pselTsel.get(0).get(i).getFitnessValue();
		}
		DefaultTableModel model3 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}} ;
		model3.addColumn("Rodič");
		model3.addColumn("Objem");
		model3.addColumn("Hodnota");
		tablePS7.setModel(model3);
		for(int i = 0; i < ga.getNoParents(); i++) {
			model3.addRow(data3[i]);
		}
		tablePS7.getColumnModel().getColumn(0).setPreferredWidth(80);
		tablePS7.getColumnModel().getColumn(0).setMaxWidth(80);
		tablePS7.getColumnModel().getColumn(1).setPreferredWidth(50);
		tablePS7.getColumnModel().getColumn(1).setMaxWidth(50);
		tablePS7.getColumnModel().getColumn(2).setPreferredWidth(72);
	}

	double roundTwoDecimals(double d) {
		    DecimalFormat twoDForm = new DecimalFormat("#.##");
		return Double.valueOf(twoDForm.format(d));
	}

	private void fillInRecombination() {
		// tabulka1
		Object[][] data1 = new Object[ga.getNoParents()][3];
		for (int i = 0; i < ga.getNoParents(); i++) {
			data1[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).recParents.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data1[i][1] = ga.simulationData.get(currentCycle-1).recParents.get(i).getVolume();
			data1[i][2] = ga.simulationData.get(currentCycle-1).recParents.get(i).getFitnessValue();
		}
		DefaultTableModel model1 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model1.addColumn("Rodič");
		model1.addColumn("Objem");
		model1.addColumn("Hodnota");
		tableREC1.setModel(model1);
		for(int i = 0; i < ga.getNoParents(); i++) {
			model1.addRow(data1[i]);
		}
		tableREC1.getColumnModel().getColumn(0).setPreferredWidth(80);
		tableREC1.getColumnModel().getColumn(0).setMaxWidth(80);
		tableREC1.getColumnModel().getColumn(1).setPreferredWidth(50);
		tableREC1.getColumnModel().getColumn(1).setMaxWidth(50);
		tableREC1.getColumnModel().getColumn(2).setPreferredWidth(72);

		// ukazka vytvorenia potomka
		Object[][] data2 = new Object[15][3];
		data2[0][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).recOffspring.get(0).getParent1().getChromosome() & 0XFF)).replace(' ', '0');
		data2[0][1] = ga.simulationData.get(currentCycle-1).recOffspring.get(0).getParent1().getVolume();
		data2[0][2] = ga.simulationData.get(currentCycle-1).recOffspring.get(0).getParent1().getFitnessValue();
		data2[1][0] = " ";
		data2[1][1] = "+";
		data2[1][2] = " ";
		data2[2][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).recOffspring.get(0).getParent2().getChromosome() & 0XFF)).replace(' ', '0');
		data2[2][1] = ga.simulationData.get(currentCycle-1).recOffspring.get(0).getParent2().getVolume();
		data2[2][2] = ga.simulationData.get(currentCycle-1).recOffspring.get(0).getParent2().getFitnessValue();
		data2[3][0] = " ";
		data2[3][1] = "=";
		data2[3][2] = " ";
		data2[4][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).recOffspring.get(0).getChild().getChromosome() & 0XFF)).replace(' ', '0');
		data2[4][1] = ga.simulationData.get(currentCycle-1).recOffspring.get(0).getChild().getVolume();
		data2[4][2] = ga.simulationData.get(currentCycle-1).recOffspring.get(0).getChild().getFitnessValue();

		DefaultTableModel model2 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model2.addColumn("Knapsack");
		model2.addColumn("Objem");
		model2.addColumn("Hodnota");
		tableREC2.setModel(model2);
		for(int i = 0; i < 5; i++) {
			model2.addRow(data2[i]);
		}
		String toSet = new String();
		for (int i = 0; i < ga.simulationData.get(currentCycle-1).recOffspring.get(0).getCrossPoints().size(); i++) {
			toSet += Integer.toString(ga.simulationData.get(currentCycle-1).recOffspring.get(0).getCrossPoints().get(i)) + ", ";
		}
		toSet = toSet.substring(0, toSet.length()-2);
		jLabel11.setText(toSet + " (v smere <-)");

		// after recombination
		Object[][] data3 = new Object[ga.getPopulationSize()][3];

		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data3[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).recOffspring.get(i).getChild().getChromosome() & 0XFF)).replace(' ', '0');
			data3[i][1] = ga.simulationData.get(currentCycle-1).recOffspring.get(i).getChild().getVolume();
			data3[i][2] = ga.simulationData.get(currentCycle-1).recOffspring.get(i).getChild().getFitnessValue();
		}
		DefaultTableModel model3 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model3.addColumn("Potomok");
		model3.addColumn("Objem");
		model3.addColumn("Hodnota");
		tableREC3.setModel(model3);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model3.addRow(data3[i]);
		}
		tableREC3.getColumnModel().getColumn(0).setPreferredWidth(80);
		tableREC3.getColumnModel().getColumn(0).setMaxWidth(80);
		tableREC3.getColumnModel().getColumn(1).setPreferredWidth(50);
		tableREC3.getColumnModel().getColumn(1).setMaxWidth(50);
		tableREC3.getColumnModel().getColumn(2).setPreferredWidth(72);

	}

	private void fillInMutation() {
		// table 1
		Object[][] data1 = new Object[ga.getPopulationSize()][3];

		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data1[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).mutParents.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data1[i][1] = ga.simulationData.get(currentCycle-1).mutParents.get(i).getVolume();
			data1[i][2] = ga.simulationData.get(currentCycle-1).mutParents.get(i).getFitnessValue();
		}
		DefaultTableModel model1 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model1.addColumn("Potomok");
		model1.addColumn("Objem");
		model1.addColumn("Hodnota");
		tableMUT1.setModel(model1);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model1.addRow(data1[i]);
		}
		tableMUT1.getColumnModel().getColumn(0).setPreferredWidth(80);
		tableMUT1.getColumnModel().getColumn(0).setMaxWidth(80);
		tableMUT1.getColumnModel().getColumn(1).setPreferredWidth(50);
		tableMUT1.getColumnModel().getColumn(1).setMaxWidth(50);
		tableMUT1.getColumnModel().getColumn(2).setPreferredWidth(72);

		// example
		Object[][] data2 = new Object[2][3];
		data2[0][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).mutChromosomeToMutate.getChromosome() & 0XFF)).replace(' ', '0');
		data2[0][1] = ga.simulationData.get(currentCycle-1).mutChromosomeToMutate.getVolume();
		data2[0][2] = ga.simulationData.get(currentCycle-1).mutChromosomeToMutate.getFitnessValue();
		data2[1][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).mutMutatedChromosome.getChromosome() & 0XFF)).replace(' ', '0');
		data2[1][1] = ga.simulationData.get(currentCycle-1).mutMutatedChromosome.getVolume();
		data2[1][2] = ga.simulationData.get(currentCycle-1).mutMutatedChromosome.getFitnessValue();
		DefaultTableModel model2 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model2.addColumn("Potomok");
		model2.addColumn("Objem");
		model2.addColumn("Hodnota");
		tableMUT2.setModel(model2);
		for(int i = 0; i < 2; i++) {
			model2.addRow(data2[i]);
		}
		tableMUT2.getColumnModel().getColumn(0).setPreferredWidth(80);
		tableMUT2.getColumnModel().getColumn(0).setMaxWidth(80);
		tableMUT2.getColumnModel().getColumn(1).setPreferredWidth(50);
		tableMUT2.getColumnModel().getColumn(1).setMaxWidth(50);
		tableMUT2.getColumnModel().getColumn(2).setPreferredWidth(72);
		jLabel16.setText("Mutácia náhodného potomka na " +
			(ga.simulationData.get(currentCycle-1).mutBitChanged+1) + ". bite.");

		// výsledná tabuľka
		Object[][] data3 = new Object[ga.getPopulationSize()][3];

		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data3[i][0] = String.format("%8s", Integer.toBinaryString(ga.simulationData.get(currentCycle-1).mutOffspring.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data3[i][1] = ga.simulationData.get(currentCycle-1).mutOffspring.get(i).getVolume();
			data3[i][2] = ga.simulationData.get(currentCycle-1).mutOffspring.get(i).getFitnessValue();
		}
		DefaultTableModel model3 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model3.addColumn("Potomok");
		model3.addColumn("Objem");
		model3.addColumn("Hodnota");
		tableMUT3.setModel(model3);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model3.addRow(data3[i]);
		}
		tableMUT3.getColumnModel().getColumn(0).setPreferredWidth(80);
		tableMUT3.getColumnModel().getColumn(0).setMaxWidth(80);
		tableMUT3.getColumnModel().getColumn(1).setPreferredWidth(50);
		tableMUT3.getColumnModel().getColumn(1).setMaxWidth(50);
		tableMUT3.getColumnModel().getColumn(2).setPreferredWidth(72);
	}

	private void fillInReinsertion() {
		// table 1
		Object[][] data1 = new Object[ga.getPopulationSize()][3];

		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data1[i][0] = String.format("%8s", Integer.toBinaryString
	(ga.simulationData.get(currentCycle-1).reinSortedPopulation.get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data1[i][1] = ga.simulationData.get(currentCycle-1).reinSortedPopulation.get(i).getVolume();
			data1[i][2] = ga.simulationData.get(currentCycle-1).reinSortedPopulation.get(i).getFitnessValue();
		}
		DefaultTableModel model1 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model1.addColumn("Potomok");
		model1.addColumn("Objem");
		model1.addColumn("Hodnota");
		tableREIN1.setModel(model1);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model1.addRow(data1[i]);
		}
		tableREIN1.getColumnModel().getColumn(0).setPreferredWidth(80);
		tableREIN1.getColumnModel().getColumn(0).setMaxWidth(80);
		tableREIN1.getColumnModel().getColumn(1).setPreferredWidth(50);
		tableREIN1.getColumnModel().getColumn(1).setMaxWidth(50);
		tableREIN1.getColumnModel().getColumn(2).setPreferredWidth(72);
		
		// table2
		Object[][] data2 = new Object[ga.getPopulationSize()][3];

		for (int i = 0; i < ga.getPopulationSize(); i++) {
			data2[i][0] = String.format("%8s", Integer.toBinaryString
	(ga.simulationData.get(currentCycle-1).reinNewPopulation.
		get(i).getChromosome() & 0XFF)).replace(' ', '0');
			data2[i][1] = ga.simulationData.get(currentCycle-1).reinNewPopulation.get(i).getVolume();
			data2[i][2] = ga.simulationData.get(currentCycle-1).reinNewPopulation.get(i).getFitnessValue();
		}
		DefaultTableModel model2 = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
			return false;
		}};
		model2.addColumn("Potomok");
		model2.addColumn("Objem");
		model2.addColumn("Hodnota");
		tableREIN2.setModel(model2);
		for(int i = 0; i < ga.getPopulationSize(); i++) {
			model2.addRow(data2[i]);
		}
		tableREIN2.getColumnModel().getColumn(0).setPreferredWidth(80);
		tableREIN2.getColumnModel().getColumn(0).setMaxWidth(80);
		tableREIN2.getColumnModel().getColumn(1).setPreferredWidth(50);
		tableREIN2.getColumnModel().getColumn(1).setMaxWidth(50);
		tableREIN2.getColumnModel().getColumn(2).setPreferredWidth(72);
		jLabel20.setText("Počet nahradených jedincov: " + ga.getReinsertionNumber());
	}
}
